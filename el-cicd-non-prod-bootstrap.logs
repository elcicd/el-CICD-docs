
===================================================================
WARNING:
   This script should only be run on development (non-prod) bastion

   WHEN USING THIS IN YOUR OWN CLUSTER:
       FORK THE el-CICD REPOSITORY FIRST AND CREATE YOUR OWN PUBLIC/KEYS AND CREDENTIALS AS NEEDED

   ACCESS TO THE NON-PROD MASTER JENKINS SHOULD BE RESTRICTED TO CLUSTER ADMINS
===================================================================


Loading environment
Confirm the wildcard domain for the cluster: apps-crc.testing? [Y/n] 

ADDING READ-ONLY DEPLOY KEYS FOR el-CICD or el-CICD-utils to GitHub

Deleting old deploy keys...

Adding read only deploy key for el-CICD
{
  "id": 46130174,
  "key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDET2I8hicKQFRyH3aauQV9VNgNurCJAgHl2h5+bOI8BJu4gAxIjDmyDrfOnF8hOqVjMWeW4Xgq17Ofkk3XzAZcGEYoIOwl3OZPz5G2IOtS6tEkv96uU55vmc1QMtdbxEMywlr7+d4g6r/IpJBFTev2Kp/0Qx1HDeheh6zM2dqDweRP8WezRPUziILxAnjLq+/gEi6Pe2bX9JJWDXTljfEbbIHJW+F2wda0JZX5bSXEmdskZzrbIEOedYoA+A+AarIRuHK/Bs0CMVc28sBcGg/p37YNc632BO2T59yeqVqe8fd+spT0WqC2P+trpqrMGbx/FtFWtZe7MGnM2jJ2HA8u3zMO/v7F5UsNntpQf2uuFG6R/coZ11B0RjU3KehCcw/DN95WtcqehqsxoWAu+AWMTidiZ7XTYPeGI48iSJ6l5lu56jFc2X+6FXGZaqDK1luz9iW6J2lwEpDQQXENVu1mXSnKzN69eEUu3ZjW2apY61UfXcMrrJrLuxy8JwGdiR8=",
  "url": "https://api.github.com/repos/hippyod/el-CICD/keys/46130174",
  "title": "el-cicd-read-only-public-key",
  "verified": true,
  "created_at": "2020-09-11T22:36:35Z",
  "read_only": true
}

Adding read only deploy key for el-CICD-utils
{
  "id": 46130175,
  "key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDCGAjPHywPmHvSXA1DgY9CnTcx0dK/h9O+7Myl5+0PGJ875eOD+9ABpkzfkOHfnwtAq7b4kTNvX2MCgIB6S1nOZZBO1h8Z0xb4Cmfr8xj7B9eF22gHA92J0HKAvYwFbSL3gW/6Gnoq4cAnzr4d+hWclKIwEBa+wLclGgtXxGXSGJYdcDZg26AokLWEcQL7kSvMrxQ567ItRSxhaHP0IzWmVnr1gs+7o8F8o1nSb+NFZfxqLJx/ZPX7G+nVoJRH3aqZg587c73PGYrjKJgKQCNwqQmjZi/hpefno8ojX2luiw8g7UMBr/S+atwc9zrW402j9OMAsdP+Chq9JnLqHMwR17vItw6FJiYa7bf2ynITdpZXbVXGeNQz1aajdAkmd/OYKJItB2BeSGyurRZ7+ycQ0V5VTPtVKTdFD88C4/3ZIMAM9b1BQ4FPabru6lECek46cI4Dre7J0ddOxc+axot731YfPv0lX9nUu4ra0oPyr4eZlygRTtIabx7ELgfCJKc=",
  "url": "https://api.github.com/repos/hippyod/el-CICD-utils/keys/46130175",
  "title": "el-cicd-utils-read-only-public-key",
  "verified": true,
  "created_at": "2020-09-11T22:36:36Z",
  "read_only": true
}

Adding read only deploy key for el-CICD-project-repository
{
  "id": 46130176,
  "key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDeEJ5qxeGXweJtIQxnGOuGhuLwTPqEfwqQbYV8bYr70sYUeYZ8YuXIcB8MsTHcTZQ9mRAdaCh3fO3S426Y6wrylWeRqiQGxKEdZv03O6EvXmP82Hqj3736rBj0oavHZeH0keLPOj9vzosmBXPefutqLax22MzmOfiJE62rYWjE0DObPFxUYDFhnWw7zwgW6ImQAP4AFA7a/o67iWb4AhxvLYWozKk93XzS+tA7vOJStQOE8PHaJeeVcwSqO9mvpGcXGMqX4phFb+TOJp6rQOJiPm/yXUhL7RbbY5vEss77x44prrxqItL0aWC1pg3jsAVCmTo1NFh8fvSQdJtZeknF7KaTF4Va49KOzjJA4O9pTutVXxn8pgIRkKIcnVOKnaEIng6DoyTNa7j+WbdK4ZsRu2pgbMQMjrUHuDHf8dNxnqi9rVtlFeHZmlTCsprI9J41RbeKiw/mvxZS4/8xZ9Xgq26PCRFytg5Avg7A3x+L2J6CfQtZZ466/Bdjn9pMtPs=",
  "url": "https://api.github.com/repos/hippyod/el-CICD-project-repository/keys/46130176",
  "title": "el-cicd-project-info-repository-read-only-public-key",
  "verified": true,
  "created_at": "2020-09-11T22:36:37Z",
  "read_only": true
}


Created project el-cicd-non-prod-master
Now using project "el-cicd-non-prod-master" on server "https://api.crc.testing:6443".
configmap/el-cicd-meta-info created
--> Deploying template "openshift/jenkins-persistent" to project el-cicd-non-prod-master

     Jenkins
     ---------
     Jenkins service, with persistent storage.
     
     NOTE: You must have persistent volumes available in your cluster to use this template.

     A Jenkins service has been created in your project.  Log into Jenkins with your OpenShift account.  The tutorial at https://github.com/openshift/origin/blob/master/examples/jenkins/README.md contains more information about using this template.

     * With parameters:
        * Jenkins Service Name=jenkins
        * Jenkins JNLP Service Name=jenkins-jnlp
        * Enable OAuth in Jenkins=true
        * Memory Limit=2Gi
        * Volume Capacity=2Gi
        * Jenkins ImageStream Namespace=openshift
        * Disable memory intensive administrative monitors=true
        * Jenkins ImageStreamTag=jenkins:2
        * Fatal Error Log File=false
        * Allows use of Jenkins Update Center repository with invalid SSL certificate=false

--> Creating resources ...
    route.route.openshift.io "jenkins" created
    persistentvolumeclaim "jenkins" created
    deploymentconfig.apps.openshift.io "jenkins" created
    serviceaccount "jenkins" created
    rolebinding.authorization.openshift.io "jenkins_edit" created
    service "jenkins-jnlp" created
    service "jenkins" created
--> Success
    Access your application via route 'jenkins-el-cicd-non-prod-master.apps-crc.testing' 
    Run 'oc status' to view your app.
clusterrole.rbac.authorization.k8s.io/cluster-admin added: "jenkins"
Sealed Secrets not found...

kubeseal version v0.12.5 installed
deployment.apps/sealed-secrets-controller created
customresourcedefinition.apiextensions.k8s.io/sealedsecrets.bitnami.com unchanged
role.rbac.authorization.k8s.io/sealed-secrets-service-proxier unchanged
serviceaccount/sealed-secrets-controller unchanged
service/sealed-secrets-controller created
rolebinding.rbac.authorization.k8s.io/sealed-secrets-service-proxier unchanged
rolebinding.rbac.authorization.k8s.io/sealed-secrets-controller unchanged
role.rbac.authorization.k8s.io/sealed-secrets-key-admin unchanged
clusterrolebinding.rbac.authorization.k8s.io/sealed-secrets-controller unchanged
clusterrole.rbac.authorization.k8s.io/secrets-unsealer unchanged
Create custom cluster role for the management of sealedsecrets by Jenkins service accounts
clusterrole.rbac.authorization.k8s.io/sealed-secrets-management unchanged
Sealed Secrets Controller Version v0.12.5 installed!

Creating the non-prod project onboarding pipeline
buildconfig.build.openshift.io/non-prod-project-onboarding created

Waiting for Jenkins to be ready.jenkins-1-pwb2v   1/1     Running   0          68s
Jenkins up, sleep for 10 more seconds to make sure server REST api is ready


Creating the image repository pull secrets for each environment: DEV QA UAT STG

Creating DEV image pull secret

Creating QA image pull secret

Creating UAT image pull secret

Creating STG image pull secret

Pushing el-CICD git read only private key to Jenkins

Pushing el-CICD-utils git read only private key to Jenkins

Pushing el-CICD-project-info-repository git read only private key to Jenkins

Pushing git repo access token to Jenkins

Pushing the image repository access tokens for each environment to Jenkins: DEV QA UAT STG

Pushing DEV image repo access tokens per environment to Jenkins

Pushing QA image repo access tokens per environment to Jenkins

Pushing UAT image repo access tokens per environment to Jenkins

Pushing STG image repo access tokens per environment to Jenkins
